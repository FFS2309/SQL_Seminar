-- 57.
INSERT INTO JOBS (JOB_ID, JOB_TITLE) VALUES ('SEN_PROG','Seniorprogrammer');

-- 58.
UPDATE EMPLOYEES SET SALARY = SALARY + 100 WHERE SALARY < (SELECT AVG(SALARY) FROM EMPLOYEES);

-- 59.
UPDATE EMPLOYEES SET SALARY = SALARY * 1.1 WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM EMPLOYEES);

-- 60.
UPDATE EMPLOYEES SET SALARY = (SELECT SALARY FROM EMPLOYEES WHERE EMPLOYEE_ID = (SELECT MANAGER_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = 115)) * 0.9 WHERE EMPLOYEE_ID = 115;

-- 61.
CREATE TABLE ABTEILUNGEN as select * from departments;
DELETE FROM ABTEILUNGEN WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS MINUS SELECT DISTINCT DEPARTMENT_ID FROM EMPLOYEES);

-- 62.
UPDATE EMPLOYEES SET JOB_ID = (SELECT JOB_ID FROM JOBS WHERE JOB_TITLE = 'Seniorprogrammer') WHERE EMPLOYEE_ID = 103;

-- 63.
UPDATE EMPLOYEES SET MANAGER_ID = NULL WHERE EMPLOYEE_ID = 114;
UPDATE DEPARTMENTS SET MANAGER_ID = NULL WHERE MANAGER_ID = 114;
DELETE FROM JOB_HISTORY WHERE EMPLOYEE_ID = 114;
UPDATE EMPLOYEES SET MANAGER_ID = NULL WHERE MANAGER_ID = 114;
DELETE FROM EMPLOYEES WHERE EMPLOYEE_ID = 114;